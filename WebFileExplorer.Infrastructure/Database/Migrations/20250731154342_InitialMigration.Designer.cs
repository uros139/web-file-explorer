// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebFileExplorer.Infrastructure.Database;

#nullable disable

namespace WebFileExplorer.Infrastructure.Migrations;

[DbContext(typeof(ApplicationDbContext))]
[Migration("20250731154342_InitialMigration")]
partial class InitialMigration
{
    /// <inheritdoc />
    protected override void BuildTargetModel(ModelBuilder modelBuilder)
    {
#pragma warning disable 612, 618
        modelBuilder
            .HasAnnotation("ProductVersion", "9.0.7")
            .HasAnnotation("Relational:MaxIdentifierLength", 63);

        NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

        modelBuilder.Entity("WebFileExplorer.Domain.Files.File", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uuid");

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("timestamp with time zone");

                b.Property<byte[]>("FileContent")
                    .HasColumnType("bytea");

                b.Property<Guid>("FolderId")
                    .HasColumnType("uuid");

                b.Property<string>("MimeType")
                    .IsRequired()
                    .HasColumnType("text");

                b.Property<DateTime>("ModifiedAt")
                    .HasColumnType("timestamp with time zone");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasColumnType("text");

                b.Property<long>("SizeInBytes")
                    .HasColumnType("bigint");

                b.Property<string>("StoragePath")
                    .IsRequired()
                    .HasColumnType("text");

                b.Property<string>("TextContent")
                    .HasColumnType("text");

                b.Property<byte[]>("ThumbnailData")
                    .HasColumnType("bytea");

                b.HasKey("Id");

                b.HasIndex("FolderId");

                b.ToTable("Files");
            });

        modelBuilder.Entity("WebFileExplorer.Domain.Folders.Folder", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uuid");

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("timestamp with time zone");

                b.Property<DateTime>("ModifiedAt")
                    .HasColumnType("timestamp with time zone");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasColumnType("text");

                b.Property<Guid?>("ParentId")
                    .HasColumnType("uuid");

                b.HasKey("Id");

                b.HasIndex("ParentId");

                b.ToTable("Folders");
            });

        modelBuilder.Entity("WebFileExplorer.Domain.Files.File", b =>
            {
                b.HasOne("WebFileExplorer.Domain.Folders.Folder", "Folder")
                    .WithMany("Files")
                    .HasForeignKey("FolderId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Folder");
            });

        modelBuilder.Entity("WebFileExplorer.Domain.Folders.Folder", b =>
            {
                b.HasOne("WebFileExplorer.Domain.Folders.Folder", "Parent")
                    .WithMany("Subfolders")
                    .HasForeignKey("ParentId");

                b.Navigation("Parent");
            });

        modelBuilder.Entity("WebFileExplorer.Domain.Folders.Folder", b =>
            {
                b.Navigation("Files");

                b.Navigation("Subfolders");
            });
#pragma warning restore 612, 618
    }
}
